[tool.poetry]
name = "drawing-machine"
version = "0.1.0"
description = "Drawing Machine Project"
authors = ["nicohaberkorn <haberkornico@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.11,<4"
fastapi = "^0.116.1"
uvicorn = {extras = ["standard"], version = "^0.35.0"}
pydantic = "^2.11.7"
aiohttp = "^3.12.15"
web3 = "^7.13.0"
pyserial = "^3.5"
pytest = "^8.4.1"
pytest-asyncio = "^1.1.0"
black = "^25.1.0"
ruff = "^0.12.8"
mypy = "^1.17.1"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.42"}
asyncpg = "^0.30.0"
alembic = "^1.16.4"
aiosqlite = "^0.21.0"
psycopg2-binary = "^2.9.10"
redis = "^6.4.0"
requests = "^2.32.4"
pyyaml = "^6.0.2"
prometheus-client = "^0.22.1"

[tool.poetry.group.dev.dependencies]
pytest-cov = "^6.2.1"
pytest-json-report = "^1.5.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Add these sections to your existing pyproject.toml

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]
exclude = [
    ".bzr",
    ".direnv", 
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.isort]
known-first-party = ["shared", "edge", "cloud"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=shared",
    "--cov=edge",
    "--cov=cloud",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-fail-under=80"
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "slow: Slow tests"
]